{"name":"Proto","tagline":"A programming language that emphasizes prototypes, integrity, and fluent syntax.","body":"# Proto\r\n\r\nProto is a programming language that compiles to JavaScript.  It emphasizes *prototypal programming*, *high integrity*, and *fluent, disambiguated syntax*.  It is currently in active development and highly experimental.\r\n\r\nProto compiles to ECMAScript 5.  It uses ECMAScript 6 as a foundation, but deviates significantly -- even replacing the meta-object protocol.  Though Proto is *like* JavaScript, Proto is *not JavaScript*.  Unlike CoffeeScript, Proto is not simply syntactic changes layered into the JavaScript language -- it fundamentally differs with many aspects of the language.\r\n\r\n## Use\r\n\r\n\tnpm install protolang\r\n\r\nIn a JS project:\r\n\r\n\tvar proto = require('protolang');\r\n\r\n\tvar jsSource = proto.transpile(protoSource);\r\n\t// ...\r\n\r\nThere is also a `tools/` directory with a command-line compiler (`protoc`) and a simple server (`server`).\r\n\r\n### Command-Line Compiler\r\n\r\n\t$ node protoc /path/to/file.proto\r\n\r\nThis will output the transpiled JavaScript to stdout.  You can pipe it elsewhere or redirect it to a file using your OS pipes and redirects.\r\n\r\n### Simple Proto->JS Server\r\n\r\n\t$ node server /path/to/root/dir --port 3000\r\n\tServer running on port 3000\r\n\r\nThis simple server can be useful when developing Proto scripts so that you don't have to constantly compile them.  It will *only* serve `.proto` files and it will transpile them to JavaScript on the fly.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}