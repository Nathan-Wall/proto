// This is based on https://github.com/domenic/promises-unwrapping
// commit ab245ff421075c6d8351a26c0f8b9e791bc7c76c

function CastToPromise(P, x) {
	var proto, deferred;
	if (IsPromise(x)) {
		proto = getPrototypeOf(x);
		if (proto === P)
			return x;
	}
	deferred = GetDeferred(P);
	deferred.Resolve(x);
	return deferred.Promise;
}

function GetDeferred(P) {
	var deferred, resolver;
	if (!IsObject(P))
		throw new TypeError('Object expected');
	deferred = { Promise: undefined, Resolve: undefined, Reject: undefined };
	resolver = function() { };
}